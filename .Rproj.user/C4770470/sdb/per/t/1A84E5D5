{
    "contents" : "#The make_plot() function accepts 1 argument: 'quiet'. Setting it to TRUE turns off the messages\nmake_plot3 <- function(quiet = FALSE){\n        #the data url\n        url = \"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip\"\n        #temporary holder for downloaded zip file\n        temp <- tempfile()\n        #determining the operating system to choose a proper download method ('curl' for Unix and Mac)\n        if(!quiet) { message(paste(\"Downloading data from\", url)) }\n        if( Sys.info()[\"sysname\"] == \"Windows\") {\n                download.file(url, destfile = temp, quiet = TRUE)\n        } else {\n                download.file(url, destfile = temp, quiet = TRUE, method = \"curl\")\n        }\n        if(!quiet) { message(\"Finished downloading\") }\n        #Preparing the data frame\n        if(!quiet) { message(\"Extracting contents\\t\", appendLF = FALSE) }\n        #extracting the name of the actual data file inside compressed file\n        contents <- unzip(temp, list = TRUE)[1][\"Name\"]\n        #reading the first 5 rows to detrermine column classes and headers\n        first5rows <- read.table(unz(temp, contents), header = TRUE, nrows = 5, sep = \";\", na.strings = \"?\")\n        classes <- sapply(first5rows, class)\n        headers <- names(first5rows)\n        #preparing line numbers to download, based on the timstamps\n        first_line_of_data <- strptime(paste(as.character(first5rows$Date[1]), as.character(first5rows$Time[1])), format = \"%d/%m/%Y %H:%M:%S\")\n        beginning_of_sample <- strptime(\"2007-02-01 00:00:00\", format=\"%Y-%m-%d %H:%M:%S\")\n        end_of_sample <- strptime(\"2007-02-03 00:00:00\", format=\"%Y-%m-%d %H:%M:%S\")\n        time_to_skip <- (as.numeric(beginning_of_sample) - as.numeric(first_line_of_data)) / 60\n        nrows_to_download <- (as.numeric(end_of_sample) - as.numeric(beginning_of_sample)) / 60\n        #using colClasses argument speeds up the process of reading table\n        data <- read.table(unz(temp, contents), header = FALSE, colClasses = classes, sep = \";\", na.strings = \"?\",skip = time_to_skip+1, nrows = nrows_to_download)\n        #adding headers\n        colnames(data) <- headers\n        #releasing the temporary file\n        unlink(temp)\n        if(!quiet) { message(\"Done\\n\") }\n        \n        ### PLOT ###\n        #setting locale, so that the day names are printed in English\n        Sys.setlocale(\"LC_TIME\", \"English\")\n        #combining the Date and Time columns\n        data$Timestamp <- strptime(paste(as.character(data$Date), as.character(data$Time)), format = \"%d/%m/%Y %H:%M:%S\")\n       \n        if(!quiet) { message(\"Opening png device\") }\n        png(\"plot3.png\", width = 480, height = 480)\n        \n        #drawing the plot with type = \"n\" to make an empty frame first\n        plot(data$Timestamp, data$Sub_metering_1, type = \"n\", xlab = \"\", ylab = \"Energy sub metering\")\n        legend(\"topright\", lty = \"solid\", col = c(\"black\", \"blue\", \"red\"), legend = c(\"Sub_metering_1\", \"Sub_metering_2\", \"Sub_metering_3\"))\n        lines(data$Timestamp, data$Sub_metering_1)\n        lines(data$Timestamp, data$Sub_metering_2, col = \"red\")\n        lines(data$Timestamp, data$Sub_metering_3, col = \"blue\")\n\n        dev.off()\n        if(!quiet) { message(\"Finished.\") }\n}",
    "created" : 1408023819397.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1051764358",
    "id" : "1A84E5D5",
    "lastKnownWriteTime" : 1407510827,
    "path" : "~/Rozne/R/ExData_Plotting1/plot3.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}